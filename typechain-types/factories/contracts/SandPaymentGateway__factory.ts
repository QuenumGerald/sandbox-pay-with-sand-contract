/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SandPaymentGateway,
  SandPaymentGatewayInterface,
} from "../../contracts/SandPaymentGateway";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sand",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyProcessed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentDone",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
    ],
    name: "isProcessed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "payWithPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sand",
    outputs: [
      {
        internalType: "contract IERC20Permit",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610a1e380380610a1e83398101604081905261002f916100ee565b6001600055338061005a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100638161009c565b506001600160a01b03811661008b5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b031660805261011e565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020828403121561010057600080fd5b81516001600160a01b038116811461011757600080fd5b9392505050565b6080516108bb61016360003960008181610113015281816101d20152818161029201528181610306015281816103b201528181610423015261069301526108bb6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461014d578063c1f0808a1461015e578063ccdac52514610181578063e2cab0d614610194578063f2fde38b146101a757600080fd5b806311c16896146100a357806312065fe0146100db5780635312ea8e146100f1578063715018a61461010657806375e87f011461010e575b600080fd5b6100c66100b1366004610775565b60009081526002602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100e36101ba565b6040519081526020016100d2565b6101046100ff366004610775565b61024a565b005b6101046102bc565b6101357f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100d2565b6001546001600160a01b0316610135565b6100c661016c366004610775565b60026020526000908152604090205460ff1681565b61010461018f3660046107aa565b6102d0565b6101046101a23660046107df565b610349565b6101046101b536600461084a565b61046c565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610221573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610245919061086c565b905090565b6102526104ac565b8060000361027357604051631f2a200560e01b815260040160405180910390fd5b6102b96102886001546001600160a01b031690565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690836104d9565b50565b6102c46104ac565b6102ce6000610538565b565b6102d861058a565b816000036102f957604051631f2a200560e01b815260040160405180910390fd5b61032e6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330856105b4565b61033a833384846105f3565b6103446001600055565b505050565b61035161058a565b8560000361037257604051631f2a200560e01b815260040160405180910390fd5b60405163d505accf60e01b8152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d505accf9060e401600060405180830381600087803b1580156103fe57600080fd5b505af1158015610412573d6000803e3d6000fd5b5061044d9250506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690503330896105b4565b610459873388846105f3565b6104636001600055565b50505050505050565b6104746104ac565b6001600160a01b0381166104a357604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6102b981610538565b6001546001600160a01b031633146102ce5760405163118cdaa760e01b815233600482015260240161049a565b6040516001600160a01b0383811660248301526044820183905261034491859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610704565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6002600054036105ad57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6040516001600160a01b0384811660248301528381166044830152606482018390526105ed9186918216906323b872dd90608401610506565b50505050565b60008481526002602052604090205460ff161561062357604051632bf773b360e11b815260040160405180910390fd5b6000848152600260205260409020805460ff191660011790556001600160a01b0381166106865760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b604482015260640161049a565b6106ba6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682846104d9565b826001600160a01b0316847f78a7a294332a0f331bfc3d46b79a171e1d43265d278b00de0f5b981ef6876938846040516106f691815260200190565b60405180910390a350505050565b600080602060008451602086016000885af180610727576040513d6000823e3d81fd5b50506000513d9150811561073f57806001141561074c565b6001600160a01b0384163b155b156105ed57604051635274afe760e01b81526001600160a01b038516600482015260240161049a565b60006020828403121561078757600080fd5b5035919050565b80356001600160a01b03811681146107a557600080fd5b919050565b6000806000606084860312156107bf57600080fd5b83359250602084013591506107d66040850161078e565b90509250925092565b600080600080600080600060e0888a0312156107fa57600080fd5b873596506020880135955060408801359450606088013560ff8116811461082057600080fd5b93506080880135925060a0880135915061083c60c0890161078e565b905092959891949750929550565b60006020828403121561085c57600080fd5b6108658261078e565b9392505050565b60006020828403121561087e57600080fd5b505191905056fea26469706673582212203a0d93e5eb60a961f897236c8bd499bcb3b25334ddaf4c11cb23535fc6fd07aa64736f6c63430008140033";

type SandPaymentGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SandPaymentGatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SandPaymentGateway__factory extends ContractFactory {
  constructor(...args: SandPaymentGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _sand: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_sand, overrides || {});
  }
  override deploy(
    _sand: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_sand, overrides || {}) as Promise<
      SandPaymentGateway & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SandPaymentGateway__factory {
    return super.connect(runner) as SandPaymentGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SandPaymentGatewayInterface {
    return new Interface(_abi) as SandPaymentGatewayInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SandPaymentGateway {
    return new Contract(address, _abi, runner) as unknown as SandPaymentGateway;
  }
}
