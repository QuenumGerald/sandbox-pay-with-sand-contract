/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SandPaymentGateway,
  SandPaymentGatewayInterface,
} from "../../contracts/SandPaymentGateway";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sand",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_feeBasisPoints",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyProcessed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFee",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newFeeRecipient",
        type: "address",
      },
    ],
    name: "FeeRecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "newFeeBasisPoints",
        type: "uint16",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentDone",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBasisPoints",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
    ],
    name: "isProcessed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeRecipient_",
        type: "address",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "feeRecipient_",
        type: "address",
      },
    ],
    name: "payWithPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sand",
    outputs: [
      {
        internalType: "contract IERC20Permit",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_feeBasisPoints",
        type: "uint16",
      },
    ],
    name: "updateFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
    ],
    name: "updateFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610d65380380610d6583398101604081905261002f9161017f565b6001600055338061005a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006381610111565b506001600160a01b038316158061008157506001600160a01b038116155b1561009f5760405163d92e233d60e01b815260040160405180910390fd5b6103e88261ffff1611156100c6576040516358d620b360e01b815260040160405180910390fd5b6001600160a01b039283166080526001805461ffff909316600160a01b0261ffff60a01b199093169290921790915560028054919092166001600160a01b03199091161790556101cb565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b038116811461017a57600080fd5b919050565b60008060006060848603121561019457600080fd5b61019d84610163565b9250602084015161ffff811681146101b457600080fd5b91506101c260408501610163565b90509250925092565b608051610b556102106000396000818161019d0152818161027f015281816103c501528181610439015281816104e50152818161055601526108840152610b556000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063ccdac52511610066578063ccdac5251461021b578063e2cab0d61461022e578063f160d36914610241578063f2fde38b1461025457600080fd5b80638da5cb5b146101bf578063b8606eef146101d0578063c1f0808a146101f857600080fd5b806346904840116100c857806346904840146101525780635312ea8e1461017d578063715018a61461019057806375e87f011461019857600080fd5b806311c16896146100ef57806312065fe0146101275780632c6cda931461013d575b600080fd5b6101126100fd366004610983565b60009081526003602052604090205460ff1690565b60405190151581526020015b60405180910390f35b61012f610267565b60405190815260200161011e565b61015061014b36600461099c565b6102f7565b005b600254610165906001600160a01b031681565b6040516001600160a01b03909116815260200161011e565b61015061018b366004610983565b61037d565b6101506103ef565b6101657f000000000000000000000000000000000000000000000000000000000000000081565b6001546001600160a01b0316610165565b6001546101e590600160a01b900461ffff1681565b60405161ffff909116815260200161011e565b610112610206366004610983565b60036020526000908152604090205460ff1681565b6101506102293660046109e3565b610403565b61015061023c366004610a18565b61047c565b61015061024f366004610a83565b61059f565b610150610262366004610a83565b61061c565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156102ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f29190610a9e565b905090565b6102ff61065c565b6103e88161ffff161115610326576040516358d620b360e01b815260040160405180910390fd5b6001805461ffff60a01b1916600160a01b61ffff8416908102919091179091556040519081527fc8fcf8ee1425e7e60b8af83735e1eb516d5b9ef05bfd6eece552ebaeb7c75b48906020015b60405180910390a150565b61038561065c565b806000036103a657604051631f2a200560e01b815260040160405180910390fd5b6103ec6103bb6001546001600160a01b031690565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169083610689565b50565b6103f761065c565b61040160006106e8565b565b61040b61073a565b8160000361042c57604051631f2a200560e01b815260040160405180910390fd5b6104616001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085610764565b61046d833384846107a3565b6104776001600055565b505050565b61048461073a565b856000036104a557604051631f2a200560e01b815260040160405180910390fd5b60405163d505accf60e01b8152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d505accf9060e401600060405180830381600087803b15801561053157600080fd5b505af1158015610545573d6000803e3d6000fd5b506105809250506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169050333089610764565b61058c873388846107a3565b6105966001600055565b50505050505050565b6105a761065c565b6001600160a01b0381166105ce5760405163d92e233d60e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527f7a7b5a0a132f9e0581eb8527f66eae9ee89c2a3e79d4ac7e41a1f1f4d48a7fc290602001610372565b61062461065c565b6001600160a01b03811661065357604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103ec816106e8565b6001546001600160a01b031633146104015760405163118cdaa760e01b815233600482015260240161064a565b6040516001600160a01b0383811660248301526044820183905261047791859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610912565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60026000540361075d57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6040516001600160a01b03848116602483015283811660448301526064820183905261079d9186918216906323b872dd906084016106b6565b50505050565b60008481526003602052604090205460ff16156107d357604051632bf773b360e11b815260040160405180910390fd5b6000848152600360205260408120805460ff19166001908117909155546127109061080a9061ffff600160a01b9091041685610acd565b6108149190610aea565b905060006108228285610b0c565b905081156108ab576001600160a01b0383166108775760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a5908199959549958da5c1a595b9d60621b604482015260640161064a565b6108ab6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484610689565b80156108c6576108c66103bb6001546001600160a01b031690565b846001600160a01b0316867f78a7a294332a0f331bfc3d46b79a171e1d43265d278b00de0f5b981ef68769388660405161090291815260200190565b60405180910390a3505050505050565b600080602060008451602086016000885af180610935576040513d6000823e3d81fd5b50506000513d9150811561094d57806001141561095a565b6001600160a01b0384163b155b1561079d57604051635274afe760e01b81526001600160a01b038516600482015260240161064a565b60006020828403121561099557600080fd5b5035919050565b6000602082840312156109ae57600080fd5b813561ffff811681146109c057600080fd5b9392505050565b80356001600160a01b03811681146109de57600080fd5b919050565b6000806000606084860312156109f857600080fd5b8335925060208401359150610a0f604085016109c7565b90509250925092565b600080600080600080600060e0888a031215610a3357600080fd5b873596506020880135955060408801359450606088013560ff81168114610a5957600080fd5b93506080880135925060a08801359150610a7560c089016109c7565b905092959891949750929550565b600060208284031215610a9557600080fd5b6109c0826109c7565b600060208284031215610ab057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610ae457610ae4610ab7565b92915050565b600082610b0757634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610ae457610ae4610ab756fea264697066735822122097c4bf8334e3293948b8262b9352edc48560fa7fe569c103677cb760efe876ad64736f6c63430008140033";

type SandPaymentGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SandPaymentGatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SandPaymentGateway__factory extends ContractFactory {
  constructor(...args: SandPaymentGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _sand: AddressLike,
    _feeBasisPoints: BigNumberish,
    _feeRecipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _sand,
      _feeBasisPoints,
      _feeRecipient,
      overrides || {}
    );
  }
  override deploy(
    _sand: AddressLike,
    _feeBasisPoints: BigNumberish,
    _feeRecipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _sand,
      _feeBasisPoints,
      _feeRecipient,
      overrides || {}
    ) as Promise<
      SandPaymentGateway & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SandPaymentGateway__factory {
    return super.connect(runner) as SandPaymentGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SandPaymentGatewayInterface {
    return new Interface(_abi) as SandPaymentGatewayInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SandPaymentGateway {
    return new Contract(address, _abi, runner) as unknown as SandPaymentGateway;
  }
}
