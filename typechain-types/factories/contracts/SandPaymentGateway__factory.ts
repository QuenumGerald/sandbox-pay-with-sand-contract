/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SandPaymentGateway,
  SandPaymentGatewayInterface,
} from "../../contracts/SandPaymentGateway";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sand",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyProcessed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentDone",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
    ],
    name: "isProcessed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "payWithPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sand",
    outputs: [
      {
        internalType: "contract IERC20Permit",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516108ec3803806108ec83398101604081905261002f916100ee565b6001600055338061005a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100638161009c565b506001600160a01b03811661008b5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b031660805261011e565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020828403121561010057600080fd5b81516001600160a01b038116811461011757600080fd5b9392505050565b60805161079f61014d6000396000818160d4015281816102440152818161036a01526103db015261079f6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c1f0808a1161005b578063c1f0808a1461011f578063ccdac52514610142578063e2cab0d614610155578063f2fde38b1461016857600080fd5b806311c168961461008d578063715018a6146100c557806375e87f01146100cf5780638da5cb5b1461010e575b600080fd5b6100b061009b366004610672565b60009081526002602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100cd61017b565b005b6100f67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100bc565b6001546001600160a01b03166100f6565b6100b061012d366004610672565b60026020526000908152604090205460ff1681565b6100cd6101503660046106a7565b61018f565b6100cd6101633660046106dc565b610287565b6100cd610176366004610747565b610424565b610183610462565b61018d600061048f565b565b6101976104e1565b816000036101b857604051631f2a200560e01b815260040160405180910390fd5b6001600160a01b0381166102075760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b60448201526064015b60405180910390fd5b60008381526002602052604090205460ff161561023757604051632bf773b360e11b815260040160405180910390fd5b61026c6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633838561050b565b6102788333848461056b565b6102826001600055565b505050565b61028f6104e1565b856000036102b057604051631f2a200560e01b815260040160405180910390fd5b6001600160a01b0381166102fa5760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b60448201526064016101fe565b60008781526002602052604090205460ff161561032a57604051632bf773b360e11b815260040160405180910390fd5b60405163d505accf60e01b8152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d505accf9060e401600060405180830381600087803b1580156103b657600080fd5b505af11580156103ca573d6000803e3d6000fd5b506104059250506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016905033838961050b565b6104118733888461056b565b61041b6001600055565b50505050505050565b61042c610462565b6001600160a01b03811661045657604051631e4fbdf760e01b8152600060048201526024016101fe565b61045f8161048f565b50565b6001546001600160a01b0316331461018d5760405163118cdaa760e01b81523360048201526024016101fe565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60026000540361050457604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610565908590610601565b50505050565b60008481526002602052604090205460ff161561059b57604051632bf773b360e11b815260040160405180910390fd5b60008481526002602052604090819020805460ff19166001179055516001600160a01b0384169085907f78a7a294332a0f331bfc3d46b79a171e1d43265d278b00de0f5b981ef6876938906105f39086815260200190565b60405180910390a350505050565b600080602060008451602086016000885af180610624576040513d6000823e3d81fd5b50506000513d9150811561063c578060011415610649565b6001600160a01b0384163b155b1561056557604051635274afe760e01b81526001600160a01b03851660048201526024016101fe565b60006020828403121561068457600080fd5b5035919050565b80356001600160a01b03811681146106a257600080fd5b919050565b6000806000606084860312156106bc57600080fd5b83359250602084013591506106d36040850161068b565b90509250925092565b600080600080600080600060e0888a0312156106f757600080fd5b873596506020880135955060408801359450606088013560ff8116811461071d57600080fd5b93506080880135925060a0880135915061073960c0890161068b565b905092959891949750929550565b60006020828403121561075957600080fd5b6107628261068b565b939250505056fea2646970667358221220ad405ceea4c5db5b61406645939c858f27b9d9c65d84b6ee29e57f7371ae497464736f6c63430008140033";

type SandPaymentGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SandPaymentGatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SandPaymentGateway__factory extends ContractFactory {
  constructor(...args: SandPaymentGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _sand: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_sand, overrides || {});
  }
  override deploy(
    _sand: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_sand, overrides || {}) as Promise<
      SandPaymentGateway & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SandPaymentGateway__factory {
    return super.connect(runner) as SandPaymentGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SandPaymentGatewayInterface {
    return new Interface(_abi) as SandPaymentGatewayInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SandPaymentGateway {
    return new Contract(address, _abi, runner) as unknown as SandPaymentGateway;
  }
}
